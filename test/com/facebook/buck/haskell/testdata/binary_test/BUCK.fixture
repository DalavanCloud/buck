haskell_binary(
  name = 'foo',
  main = 'Foo',
  srcs = [
    'Foo.hs',
  ],
)

haskell_binary(
  name = 'foo_rtsflags',
  main = 'Foo',
  srcs = [
    'Foo.hs',
  ],
  linker_flags = [
    '-rtsopts',
  ],
)

haskell_binary(
  name = 'dependent',
  main = 'Dependent',
  srcs = [
    'Dependent.hs',
  ],
  deps = [
    ':dependency',
  ],
)

haskell_library(
  name = 'dependency',
  srcs = [
    'Dependency.hs',
  ],
)

haskell_binary(
  name = 'foreign',
  main = 'Foreign',
  srcs = [
    'Foreign.hs',
  ],
  deps = [
    ':c',
  ],
)

cxx_library(
  name = 'c',
  srcs = [
    'foreign.c',
  ],
)

haskell_binary(
  name = 'gen_main',
  srcs = [
    ':gen',
  ],
)

cxx_genrule(
  name = 'gen',
  out = 'Main.hs',
  cmd = 'echo \'module Main where\nmain = putStrLn "$(cppflags)"\' > $OUT',
)

cxx_library(
  name = 'c_header',
  exported_headers = [
    'header.h',
  ],
)

haskell_binary(
  name = 'hs_header',
  main = 'HsHeader',
  compiler_flags = ['-cpp'],
  srcs = [
    'HsHeader.hs',
  ],
  deps = [
    ':c_header',
  ],
)

haskell_binary(
  name = 'error',
  main = 'Error',
  srcs = [
    'Error.hs',
  ],
)
